Traceback (most recent call last):
  File "/home/conda/users/envs/users-pangeofu/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/conda/users/envs/users-pangeofu/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/conda/users/envs/users-pangeofu/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/conda/users/envs/users-pangeofu/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/home/conda/users/envs/users-pangeofu/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/conda/users/envs/users-pangeofu/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/conda/users/envs/users-pangeofu/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/conda/users/envs/users-pangeofu/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
ds = cat['nwm21-streamflow-cloud'].to_dask()
indexer = ds.gage_id != ''.rjust(15).encode()
smplData = ds.where(indexer.compute(), drop=True) # subset to only those features with a valid gage_id
smplData.drop('crs') # Not needed/wanted for this analysis
smplData
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mProfileNotFound[0m                           Traceback (most recent call last)
Cell [0;32mIn[4], line 1[0m
[0;32m----> 1[0m ds [38;5;241m=[39m [43mcat[49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43mnwm21-streamflow-cloud[39;49m[38;5;124;43m'[39;49m[43m][49m[38;5;241;43m.[39;49m[43mto_dask[49m[43m([49m[43m)[49m
[1;32m      2[0m indexer [38;5;241m=[39m ds[38;5;241m.[39mgage_id [38;5;241m!=[39m [38;5;124m'[39m[38;5;124m'[39m[38;5;241m.[39mrjust([38;5;241m15[39m)[38;5;241m.[39mencode()
[1;32m      3[0m smplData [38;5;241m=[39m ds[38;5;241m.[39mwhere(indexer[38;5;241m.[39mcompute(), drop[38;5;241m=[39m[38;5;28;01mTrue[39;00m) [38;5;66;03m# subset to only those features with a valid gage_id[39;00m

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/intake_xarray/base.py:69[0m, in [0;36mDataSourceMixin.to_dask[0;34m(self)[0m
[1;32m     67[0m [38;5;28;01mdef[39;00m [38;5;21mto_dask[39m([38;5;28mself[39m):
[1;32m     68[0m [38;5;250m    [39m[38;5;124;03m"""Return xarray object where variables are dask arrays"""[39;00m
[0;32m---> 69[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mread_chunked[49m[43m([49m[43m)[49m

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/intake_xarray/base.py:44[0m, in [0;36mDataSourceMixin.read_chunked[0;34m(self)[0m
[1;32m     42[0m [38;5;28;01mdef[39;00m [38;5;21mread_chunked[39m([38;5;28mself[39m):
[1;32m     43[0m [38;5;250m    [39m[38;5;124;03m"""Return xarray object (which will have chunks)"""[39;00m
[0;32m---> 44[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_load_metadata[49m[43m([49m[43m)[49m
[1;32m     45[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_ds

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/intake/source/base.py:279[0m, in [0;36mDataSourceBase._load_metadata[0;34m(self)[0m
[1;32m    277[0m [38;5;250m[39m[38;5;124;03m"""load metadata only if needed"""[39;00m
[1;32m    278[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_schema [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 279[0m     [38;5;28mself[39m[38;5;241m.[39m_schema [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_get_schema[49m[43m([49m[43m)[49m
[1;32m    280[0m     [38;5;28mself[39m[38;5;241m.[39mdtype [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_schema[38;5;241m.[39mdtype
[1;32m    281[0m     [38;5;28mself[39m[38;5;241m.[39mshape [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_schema[38;5;241m.[39mshape

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/intake_xarray/base.py:18[0m, in [0;36mDataSourceMixin._get_schema[0;34m(self)[0m
[1;32m     15[0m [38;5;28mself[39m[38;5;241m.[39murlpath [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_get_cache([38;5;28mself[39m[38;5;241m.[39murlpath)[[38;5;241m0[39m]
[1;32m     17[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_ds [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m---> 18[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_open_dataset[49m[43m([49m[43m)[49m
[1;32m     20[0m     metadata [38;5;241m=[39m {
[1;32m     21[0m         [38;5;124m'[39m[38;5;124mdims[39m[38;5;124m'[39m: [38;5;28mdict[39m([38;5;28mself[39m[38;5;241m.[39m_ds[38;5;241m.[39mdims),
[1;32m     22[0m         [38;5;124m'[39m[38;5;124mdata_vars[39m[38;5;124m'[39m: {k: [38;5;28mlist[39m([38;5;28mself[39m[38;5;241m.[39m_ds[k][38;5;241m.[39mcoords)
[1;32m     23[0m                       [38;5;28;01mfor[39;00m k [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_ds[38;5;241m.[39mdata_vars[38;5;241m.[39mkeys()},
[1;32m     24[0m         [38;5;124m'[39m[38;5;124mcoords[39m[38;5;124m'[39m: [38;5;28mtuple[39m([38;5;28mself[39m[38;5;241m.[39m_ds[38;5;241m.[39mcoords[38;5;241m.[39mkeys()),
[1;32m     25[0m     }
[1;32m     26[0m     [38;5;28;01mif[39;00m [38;5;28mgetattr[39m([38;5;28mself[39m, [38;5;124m'[39m[38;5;124mon_server[39m[38;5;124m'[39m, [38;5;28;01mFalse[39;00m):

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/intake_xarray/xzarr.py:46[0m, in [0;36mZarrSource._open_dataset[0;34m(self)[0m
[1;32m     44[0m     [38;5;28mself[39m[38;5;241m.[39m_ds [38;5;241m=[39m xr[38;5;241m.[39mopen_mfdataset([38;5;28mself[39m[38;5;241m.[39murlpath, [38;5;241m*[39m[38;5;241m*[39mkw)
[1;32m     45[0m [38;5;28;01melse[39;00m:
[0;32m---> 46[0m     [38;5;28mself[39m[38;5;241m.[39m_ds [38;5;241m=[39m [43mxr[49m[38;5;241;43m.[39;49m[43mopen_dataset[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43murlpath[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkw[49m[43m)[49m

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/xarray/backends/api.py:526[0m, in [0;36mopen_dataset[0;34m(filename_or_obj, engine, chunks, cache, decode_cf, mask_and_scale, decode_times, decode_timedelta, use_cftime, concat_characters, decode_coords, drop_variables, inline_array, backend_kwargs, **kwargs)[0m
[1;32m    514[0m decoders [38;5;241m=[39m _resolve_decoders_kwargs(
[1;32m    515[0m     decode_cf,
[1;32m    516[0m     open_backend_dataset_parameters[38;5;241m=[39mbackend[38;5;241m.[39mopen_dataset_parameters,
[0;32m   (...)[0m
[1;32m    522[0m     decode_coords[38;5;241m=[39mdecode_coords,
[1;32m    523[0m )
[1;32m    525[0m overwrite_encoded_chunks [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m"[39m[38;5;124moverwrite_encoded_chunks[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[0;32m--> 526[0m backend_ds [38;5;241m=[39m [43mbackend[49m[38;5;241;43m.[39;49m[43mopen_dataset[49m[43m([49m
[1;32m    527[0m [43m    [49m[43mfilename_or_obj[49m[43m,[49m
[1;32m    528[0m [43m    [49m[43mdrop_variables[49m[38;5;241;43m=[39;49m[43mdrop_variables[49m[43m,[49m
[1;32m    529[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mdecoders[49m[43m,[49m
[1;32m    530[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m,[49m
[1;32m    531[0m [43m[49m[43m)[49m
[1;32m    532[0m ds [38;5;241m=[39m _dataset_from_backend_dataset(
[1;32m    533[0m     backend_ds,
[1;32m    534[0m     filename_or_obj,
[0;32m   (...)[0m
[1;32m    542[0m     [38;5;241m*[39m[38;5;241m*[39mkwargs,
[1;32m    543[0m )
[1;32m    544[0m [38;5;28;01mreturn[39;00m ds

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/xarray/backends/zarr.py:891[0m, in [0;36mZarrBackendEntrypoint.open_dataset[0;34m(self, filename_or_obj, mask_and_scale, decode_times, concat_characters, decode_coords, drop_variables, use_cftime, decode_timedelta, group, mode, synchronizer, consolidated, chunk_store, storage_options, stacklevel, zarr_version)[0m
[1;32m    871[0m [38;5;28;01mdef[39;00m [38;5;21mopen_dataset[39m(
[1;32m    872[0m     [38;5;28mself[39m,
[1;32m    873[0m     filename_or_obj,
[0;32m   (...)[0m
[1;32m    888[0m     zarr_version[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m    889[0m ):
[1;32m    890[0m     filename_or_obj [38;5;241m=[39m _normalize_path(filename_or_obj)
[0;32m--> 891[0m     store [38;5;241m=[39m [43mZarrStore[49m[38;5;241;43m.[39;49m[43mopen_group[49m[43m([49m
[1;32m    892[0m [43m        [49m[43mfilename_or_obj[49m[43m,[49m
[1;32m    893[0m [43m        [49m[43mgroup[49m[38;5;241;43m=[39;49m[43mgroup[49m[43m,[49m
[1;32m    894[0m [43m        [49m[43mmode[49m[38;5;241;43m=[39;49m[43mmode[49m[43m,[49m
[1;32m    895[0m [43m        [49m[43msynchronizer[49m[38;5;241;43m=[39;49m[43msynchronizer[49m[43m,[49m
[1;32m    896[0m [43m        [49m[43mconsolidated[49m[38;5;241;43m=[39;49m[43mconsolidated[49m[43m,[49m
[1;32m    897[0m [43m        [49m[43mconsolidate_on_close[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    898[0m [43m        [49m[43mchunk_store[49m[38;5;241;43m=[39;49m[43mchunk_store[49m[43m,[49m
[1;32m    899[0m [43m        [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m
[1;32m    900[0m [43m        [49m[43mstacklevel[49m[38;5;241;43m=[39;49m[43mstacklevel[49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[38;5;241;43m1[39;49m[43m,[49m
[1;32m    901[0m [43m        [49m[43mzarr_version[49m[38;5;241;43m=[39;49m[43mzarr_version[49m[43m,[49m
[1;32m    902[0m [43m    [49m[43m)[49m
[1;32m    904[0m     store_entrypoint [38;5;241m=[39m StoreBackendEntrypoint()
[1;32m    905[0m     [38;5;28;01mwith[39;00m close_on_error(store):

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/xarray/backends/zarr.py:428[0m, in [0;36mZarrStore.open_group[0;34m(cls, store, mode, synchronizer, group, consolidated, consolidate_on_close, chunk_store, storage_options, append_dim, write_region, safe_chunks, stacklevel, zarr_version)[0m
[1;32m    425[0m             [38;5;28;01mraise[39;00m [38;5;167;01mFileNotFoundError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mNo such file or directory: [39m[38;5;124m'[39m[38;5;132;01m{[39;00mstore[38;5;132;01m}[39;00m[38;5;124m'[39m[38;5;124m"[39m)
[1;32m    426[0m [38;5;28;01melif[39;00m consolidated:
[1;32m    427[0m     [38;5;66;03m# TODO: an option to pass the metadata_key keyword[39;00m
[0;32m--> 428[0m     zarr_group [38;5;241m=[39m [43mzarr[49m[38;5;241;43m.[39;49m[43mopen_consolidated[49m[43m([49m[43mstore[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mopen_kwargs[49m[43m)[49m
[1;32m    429[0m [38;5;28;01melse[39;00m:
[1;32m    430[0m     zarr_group [38;5;241m=[39m zarr[38;5;241m.[39mopen_group(store, [38;5;241m*[39m[38;5;241m*[39mopen_kwargs)

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/zarr/convenience.py:1299[0m, in [0;36mopen_consolidated[0;34m(store, metadata_key, mode, **kwargs)[0m
[1;32m   1296[0m         metadata_key [38;5;241m=[39m [38;5;124m'[39m[38;5;124mmeta/root/consolidated/[39m[38;5;124m'[39m [38;5;241m+[39m metadata_key
[1;32m   1298[0m [38;5;66;03m# setup metadata store[39;00m
[0;32m-> 1299[0m meta_store [38;5;241m=[39m [43mConsolidatedStoreClass[49m[43m([49m[43mstore[49m[43m,[49m[43m [49m[43mmetadata_key[49m[38;5;241;43m=[39;49m[43mmetadata_key[49m[43m)[49m
[1;32m   1301[0m [38;5;66;03m# pass through[39;00m
[1;32m   1302[0m chunk_store [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m'[39m[38;5;124mchunk_store[39m[38;5;124m'[39m, [38;5;28;01mNone[39;00m) [38;5;129;01mor[39;00m store

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/zarr/storage.py:2886[0m, in [0;36mConsolidatedMetadataStore.__init__[0;34m(self, store, metadata_key)[0m
[1;32m   2883[0m [38;5;28mself[39m[38;5;241m.[39mstore [38;5;241m=[39m Store[38;5;241m.[39m_ensure_store(store)
[1;32m   2885[0m [38;5;66;03m# retrieve consolidated metadata[39;00m
[0;32m-> 2886[0m meta [38;5;241m=[39m json_loads([38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mstore[49m[43m[[49m[43mmetadata_key[49m[43m][49m)
[1;32m   2888[0m [38;5;66;03m# check format of consolidated metadata[39;00m
[1;32m   2889[0m consolidated_format [38;5;241m=[39m meta[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mzarr_consolidated_format[39m[38;5;124m'[39m, [38;5;28;01mNone[39;00m)

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/zarr/storage.py:1393[0m, in [0;36mFSStore.__getitem__[0;34m(self, key)[0m
[1;32m   1391[0m key [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_normalize_key(key)
[1;32m   1392[0m [38;5;28;01mtry[39;00m:
[0;32m-> 1393[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmap[49m[43m[[49m[43mkey[49m[43m][49m
[1;32m   1394[0m [38;5;28;01mexcept[39;00m [38;5;28mself[39m[38;5;241m.[39mexceptions [38;5;28;01mas[39;00m e:
[1;32m   1395[0m     [38;5;28;01mraise[39;00m [38;5;167;01mKeyError[39;00m(key) [38;5;28;01mfrom[39;00m [38;5;21;01me[39;00m

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/fsspec/mapping.py:143[0m, in [0;36mFSMap.__getitem__[0;34m(self, key, default)[0m
[1;32m    141[0m k [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_key_to_str(key)
[1;32m    142[0m [38;5;28;01mtry[39;00m:
[0;32m--> 143[0m     result [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mfs[49m[38;5;241;43m.[39;49m[43mcat[49m[43m([49m[43mk[49m[43m)[49m
[1;32m    144[0m [38;5;28;01mexcept[39;00m [38;5;28mself[39m[38;5;241m.[39mmissing_exceptions:
[1;32m    145[0m     [38;5;28;01mif[39;00m default [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/fsspec/asyn.py:115[0m, in [0;36msync_wrapper.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    112[0m [38;5;129m@functools[39m[38;5;241m.[39mwraps(func)
[1;32m    113[0m [38;5;28;01mdef[39;00m [38;5;21mwrapper[39m([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m    114[0m     [38;5;28mself[39m [38;5;241m=[39m obj [38;5;129;01mor[39;00m args[[38;5;241m0[39m]
[0;32m--> 115[0m     [38;5;28;01mreturn[39;00m [43msync[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mloop[49m[43m,[49m[43m [49m[43mfunc[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/fsspec/asyn.py:100[0m, in [0;36msync[0;34m(loop, func, timeout, *args, **kwargs)[0m
[1;32m     98[0m     [38;5;28;01mraise[39;00m FSTimeoutError [38;5;28;01mfrom[39;00m [38;5;21;01mreturn_result[39;00m
[1;32m     99[0m [38;5;28;01melif[39;00m [38;5;28misinstance[39m(return_result, [38;5;167;01mBaseException[39;00m):
[0;32m--> 100[0m     [38;5;28;01mraise[39;00m return_result
[1;32m    101[0m [38;5;28;01melse[39;00m:
[1;32m    102[0m     [38;5;28;01mreturn[39;00m return_result

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/fsspec/asyn.py:55[0m, in [0;36m_runner[0;34m(event, coro, result, timeout)[0m
[1;32m     53[0m     coro [38;5;241m=[39m asyncio[38;5;241m.[39mwait_for(coro, timeout[38;5;241m=[39mtimeout)
[1;32m     54[0m [38;5;28;01mtry[39;00m:
[0;32m---> 55[0m     result[[38;5;241m0[39m] [38;5;241m=[39m [38;5;28;01mawait[39;00m coro
[1;32m     56[0m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m ex:
[1;32m     57[0m     result[[38;5;241m0[39m] [38;5;241m=[39m ex

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/fsspec/asyn.py:414[0m, in [0;36mAsyncFileSystem._cat[0;34m(self, path, recursive, on_error, batch_size, **kwargs)[0m
[1;32m    412[0m     ex [38;5;241m=[39m [38;5;28mnext[39m([38;5;28mfilter[39m(is_exception, out), [38;5;28;01mFalse[39;00m)
[1;32m    413[0m     [38;5;28;01mif[39;00m ex:
[0;32m--> 414[0m         [38;5;28;01mraise[39;00m ex
[1;32m    415[0m [38;5;28;01mif[39;00m (
[1;32m    416[0m     [38;5;28mlen[39m(paths) [38;5;241m>[39m [38;5;241m1[39m
[1;32m    417[0m     [38;5;129;01mor[39;00m [38;5;28misinstance[39m(path, [38;5;28mlist[39m)
[1;32m    418[0m     [38;5;129;01mor[39;00m paths[[38;5;241m0[39m] [38;5;241m!=[39m [38;5;28mself[39m[38;5;241m.[39m_strip_protocol(path)
[1;32m    419[0m ):
[1;32m    420[0m     [38;5;28;01mreturn[39;00m {
[1;32m    421[0m         k: v
[1;32m    422[0m         [38;5;28;01mfor[39;00m k, v [38;5;129;01min[39;00m [38;5;28mzip[39m(paths, out)
[1;32m    423[0m         [38;5;28;01mif[39;00m on_error [38;5;241m!=[39m [38;5;124m"[39m[38;5;124momit[39m[38;5;124m"[39m [38;5;129;01mor[39;00m [38;5;129;01mnot[39;00m is_exception(v)
[1;32m    424[0m     }

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/asyncio/tasks.py:408[0m, in [0;36mwait_for[0;34m(fut, timeout)[0m
[1;32m    405[0m loop [38;5;241m=[39m events[38;5;241m.[39mget_running_loop()
[1;32m    407[0m [38;5;28;01mif[39;00m timeout [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 408[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m fut
[1;32m    410[0m [38;5;28;01mif[39;00m timeout [38;5;241m<[39m[38;5;241m=[39m [38;5;241m0[39m:
[1;32m    411[0m     fut [38;5;241m=[39m ensure_future(fut, loop[38;5;241m=[39mloop)

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/s3fs/core.py:1050[0m, in [0;36mS3FileSystem._cat_file[0;34m(self, path, version_id, start, end)[0m
[1;32m   1047[0m     [38;5;28;01mfinally[39;00m:
[1;32m   1048[0m         resp[[38;5;124m"[39m[38;5;124mBody[39m[38;5;124m"[39m][38;5;241m.[39mclose()
[0;32m-> 1050[0m [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m _error_wrapper(_call_and_read, retries[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mretries)

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/s3fs/core.py:139[0m, in [0;36m_error_wrapper[0;34m(func, args, kwargs, retries)[0m
[1;32m    137[0m         err [38;5;241m=[39m e
[1;32m    138[0m err [38;5;241m=[39m translate_boto_error(err)
[0;32m--> 139[0m [38;5;28;01mraise[39;00m err

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/s3fs/core.py:112[0m, in [0;36m_error_wrapper[0;34m(func, args, kwargs, retries)[0m
[1;32m    110[0m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m(retries):
[1;32m    111[0m     [38;5;28;01mtry[39;00m:
[0;32m--> 112[0m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m func([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m    113[0m     [38;5;28;01mexcept[39;00m S3_RETRYABLE_ERRORS [38;5;28;01mas[39;00m e:
[1;32m    114[0m         err [38;5;241m=[39m e

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/s3fs/core.py:1037[0m, in [0;36mS3FileSystem._cat_file.<locals>._call_and_read[0;34m()[0m
[1;32m   1036[0m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m [38;5;21m_call_and_read[39m():
[0;32m-> 1037[0m     resp [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_call_s3(
[1;32m   1038[0m         [38;5;124m"[39m[38;5;124mget_object[39m[38;5;124m"[39m,
[1;32m   1039[0m         Bucket[38;5;241m=[39mbucket,
[1;32m   1040[0m         Key[38;5;241m=[39mkey,
[1;32m   1041[0m         [38;5;241m*[39m[38;5;241m*[39mversion_id_kw(version_id [38;5;129;01mor[39;00m vers),
[1;32m   1042[0m         [38;5;241m*[39m[38;5;241m*[39mhead,
[1;32m   1043[0m         [38;5;241m*[39m[38;5;241m*[39m[38;5;28mself[39m[38;5;241m.[39mreq_kw,
[1;32m   1044[0m     )
[1;32m   1045[0m     [38;5;28;01mtry[39;00m:
[1;32m   1046[0m         [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m resp[[38;5;124m"[39m[38;5;124mBody[39m[38;5;124m"[39m][38;5;241m.[39mread()

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/s3fs/core.py:340[0m, in [0;36mS3FileSystem._call_s3[0;34m(self, method, *akwarglist, **kwargs)[0m
[1;32m    339[0m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m [38;5;21m_call_s3[39m([38;5;28mself[39m, method, [38;5;241m*[39makwarglist, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m--> 340[0m     [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39mset_session()
[1;32m    341[0m     s3 [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39mget_s3(kwargs[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mBucket[39m[38;5;124m"[39m))
[1;32m    342[0m     method [38;5;241m=[39m [38;5;28mgetattr[39m(s3, method)

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/s3fs/core.py:526[0m, in [0;36mS3FileSystem.set_session[0;34m(self, refresh, kwargs)[0m
[1;32m    522[0m [38;5;28;01melse[39;00m:
[1;32m    523[0m     s3creator [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39msession[38;5;241m.[39mcreate_client(
[1;32m    524[0m         [38;5;124m"[39m[38;5;124ms3[39m[38;5;124m"[39m, config[38;5;241m=[39mconf, [38;5;241m*[39m[38;5;241m*[39minit_kwargs, [38;5;241m*[39m[38;5;241m*[39mclient_kwargs
[1;32m    525[0m     )
[0;32m--> 526[0m     [38;5;28mself[39m[38;5;241m.[39m_s3 [38;5;241m=[39m [38;5;28;01mawait[39;00m s3creator[38;5;241m.[39m[38;5;21m__aenter__[39m()
[1;32m    528[0m [38;5;28mself[39m[38;5;241m.[39m_s3creator [38;5;241m=[39m s3creator
[1;32m    529[0m [38;5;66;03m# the following actually closes the aiohttp connection; use of privates[39;00m
[1;32m    530[0m [38;5;66;03m# might break in the future, would cause exception at gc time[39;00m

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/aiobotocore/session.py:26[0m, in [0;36mClientCreatorContext.__aenter__[0;34m(self)[0m
[1;32m     25[0m [38;5;28;01masync[39;00m [38;5;28;01mdef[39;00m [38;5;21m__aenter__[39m([38;5;28mself[39m) [38;5;241m-[39m[38;5;241m>[39m AioBaseClient:
[0;32m---> 26[0m     [38;5;28mself[39m[38;5;241m.[39m_client [38;5;241m=[39m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_coro
[1;32m     27[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m [38;5;28mself[39m[38;5;241m.[39m_client[38;5;241m.[39m[38;5;21m__aenter__[39m()

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/aiobotocore/session.py:136[0m, in [0;36mAioSession._create_client[0;34m(self, service_name, region_name, api_version, use_ssl, verify, endpoint_url, aws_access_key_id, aws_secret_access_key, aws_session_token, config)[0m
[1;32m    133[0m [38;5;28;01melif[39;00m default_client_config [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m    134[0m     config [38;5;241m=[39m default_client_config
[0;32m--> 136[0m region_name [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_resolve_region_name[49m[43m([49m[43mregion_name[49m[43m,[49m[43m [49m[43mconfig[49m[43m)[49m
[1;32m    138[0m [38;5;66;03m# Figure out the verify value base on the various[39;00m
[1;32m    139[0m [38;5;66;03m# configuration options.[39;00m
[1;32m    140[0m [38;5;28;01mif[39;00m verify [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/botocore/session.py:973[0m, in [0;36mSession._resolve_region_name[0;34m(self, region_name, config)[0m
[1;32m    971[0m         region_name [38;5;241m=[39m config[38;5;241m.[39mregion_name
[1;32m    972[0m     [38;5;28;01melse[39;00m:
[0;32m--> 973[0m         region_name [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mget_config_variable[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mregion[39;49m[38;5;124;43m'[39;49m[43m)[49m
[1;32m    975[0m validate_region_name(region_name)
[1;32m    976[0m [38;5;66;03m# For any client that we create in retrieving credentials[39;00m
[1;32m    977[0m [38;5;66;03m# we want to create it using the same region as specified in[39;00m
[1;32m    978[0m [38;5;66;03m# creating this client. It is important to note though that the[39;00m
[0;32m   (...)[0m
[1;32m    983[0m [38;5;66;03m# the credentials returned at regional endpoints are valid across[39;00m
[1;32m    984[0m [38;5;66;03m# all regions in the partition.[39;00m

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/botocore/session.py:305[0m, in [0;36mSession.get_config_variable[0;34m(self, logical_name, methods)[0m
[1;32m    301[0m [38;5;28;01mif[39;00m methods [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m    302[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_get_config_variable_with_custom_methods(
[1;32m    303[0m         logical_name, methods
[1;32m    304[0m     )
[0;32m--> 305[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mget_component[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mconfig_store[39;49m[38;5;124;43m'[39;49m[43m)[49m[38;5;241;43m.[39;49m[43mget_config_variable[49m[43m([49m
[1;32m    306[0m [43m    [49m[43mlogical_name[49m
[1;32m    307[0m [43m[49m[43m)[49m

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/botocore/configprovider.py:426[0m, in [0;36mConfigValueStore.get_config_variable[0;34m(self, logical_name)[0m
[1;32m    424[0m     [38;5;28;01mreturn[39;00m [38;5;28;01mNone[39;00m
[1;32m    425[0m provider [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_mapping[logical_name]
[0;32m--> 426[0m [38;5;28;01mreturn[39;00m [43mprovider[49m[38;5;241;43m.[39;49m[43mprovide[49m[43m([49m[43m)[49m

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/botocore/configprovider.py:628[0m, in [0;36mChainProvider.provide[0;34m(self)[0m
[1;32m    621[0m [38;5;250m[39m[38;5;124;03m"""Provide the value from the first provider to return non-None.[39;00m
[1;32m    622[0m 
[1;32m    623[0m [38;5;124;03mEach provider in the chain has its provide method called. The first[39;00m
[1;32m    624[0m [38;5;124;03mone in the chain to return a non-None value is the returned from the[39;00m
[1;32m    625[0m [38;5;124;03mChainProvider. When no non-None value is found, None is returned.[39;00m
[1;32m    626[0m [38;5;124;03m"""[39;00m
[1;32m    627[0m [38;5;28;01mfor[39;00m provider [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39m_providers:
[0;32m--> 628[0m     value [38;5;241m=[39m [43mprovider[49m[38;5;241;43m.[39;49m[43mprovide[49m[43m([49m[43m)[49m
[1;32m    629[0m     [38;5;28;01mif[39;00m value [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m    630[0m         [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_convert_type(value)

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/botocore/configprovider.py:718[0m, in [0;36mScopedConfigProvider.provide[0;34m(self)[0m
[1;32m    716[0m [38;5;28;01mdef[39;00m [38;5;21mprovide[39m([38;5;28mself[39m):
[1;32m    717[0m [38;5;250m    [39m[38;5;124;03m"""Provide a value from a config file property."""[39;00m
[0;32m--> 718[0m     scoped_config [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_session[49m[38;5;241;43m.[39;49m[43mget_scoped_config[49m[43m([49m[43m)[49m
[1;32m    719[0m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m([38;5;28mself[39m[38;5;241m.[39m_config_var_name, [38;5;28mtuple[39m):
[1;32m    720[0m         section_config [38;5;241m=[39m scoped_config[38;5;241m.[39mget([38;5;28mself[39m[38;5;241m.[39m_config_var_name[[38;5;241m0[39m])

File [0;32m/home/conda/users/ef214d1986de9477d5223419ba4838d76e9839b19e4fb02c9e208c97cab5a61b-20230329-131713-443303-165-pangeofu/lib/python3.10/site-packages/botocore/session.py:404[0m, in [0;36mSession.get_scoped_config[0;34m(self)[0m
[1;32m    399[0m     [38;5;28;01mreturn[39;00m profile_map[38;5;241m.[39mget([38;5;124m'[39m[38;5;124mdefault[39m[38;5;124m'[39m, {})
[1;32m    400[0m [38;5;28;01melif[39;00m profile_name [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m profile_map:
[1;32m    401[0m     [38;5;66;03m# Otherwise if they specified a profile, it has to[39;00m
[1;32m    402[0m     [38;5;66;03m# exist (even if it's the default profile) otherwise[39;00m
[1;32m    403[0m     [38;5;66;03m# we complain.[39;00m
[0;32m--> 404[0m     [38;5;28;01mraise[39;00m ProfileNotFound(profile[38;5;241m=[39mprofile_name)
[1;32m    405[0m [38;5;28;01melse[39;00m:
[1;32m    406[0m     [38;5;28;01mreturn[39;00m profile_map[profile_name]

[0;31mProfileNotFound[0m: The config profile (osn-renci) could not be found
ProfileNotFound: The config profile (osn-renci) could not be found

